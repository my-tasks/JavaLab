<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="schema:xslt-engine-config" xmlns:ns="schema:xslt-engine-config"
	elementFormDefault="qualified">
	<!-- location: If there is a location with name "default" it will be default. 
		Every source has its location. Location may be global, group or local . Local 
		use: <templates id="show.categories" resource-name="s-goods.xsl" location="xsl/"/> 
		<xml-source id="goods" resource-name="s-goods.xml" location="xsl/"/>. Group 
		location may be used only in xml-source tag and defines a location for the 
		xml-source and all its templates excluding global templates. Example: <xml-source 
		id="goods" resource-name="goods.xml" group-location="res/">. Global location 
		may be defined before all sources declaration and must be included in <global-source-locations> 
		tag. Example <location resource-name="/resources/xml/" name="all" />. As 
		shown in the example it is possible to define location name - it may be useful 
		in case of use more than one global locations. If there is no names defined 
		the Configuration Loader will use the first location as default global location. 
		In case of more than one global location with names defined it is possible 
		to use @global-location in <xml-source/> and <templates/> tags. If no location 
		attribut is defined in <template/> tag, it will be associated with group-location 
		of its xml-source or with default global location witch is the first in the 
		global source locations list (no matter if it has name). If no location is 
		defined - global group or local the Configuration Loader will process as 
		the source is located in the root. @resource-name attribute is required in 
		both xml-source and templates tags. It describes an actual source (file) 
		name. @id tag is required in both xml-source and templates tags. Every xml-source 
		tag must have a unique id and all templates that are asociated with the same 
		xml-source must have unique ids. If template is global it is necessary to 
		describe @global-id attribute instead of resource-name, and location is unsupported 
		in this case too as the global-templates location will be used. -->
	<!-- @location указывает на имя глобального location, в схеме определить -->
	<!-- возможность указывать имена только действительно объявленных location -->

	<xs:element name="xslt-engine-configuration">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="global-resources-locations" minOccurs="0"
					maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="location" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="id" type="xs:string" use="optional"
										default="default" />
									<xs:attribute name="path" type="xs:string" use="required" />
								</xs:complexType>

							</xs:element>
						</xs:sequence>
					</xs:complexType>
					<xs:unique name="locationIdUnique">
						<xs:selector xpath="ns:location" />
						<xs:field xpath="@id" />
					</xs:unique>
				</xs:element>
				<xs:element name="global-xsl-resources" minOccurs="0"
					maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="xsl-resource" type="ns:XslResource"
								maxOccurs="unbounded">
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="resources" maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="xml-resource" type="ns:XmlResource"
								maxOccurs="unbounded">
							</xs:element>
						</xs:sequence>
					</xs:complexType>
					<xs:unique name="xmlIdUnique">
						<xs:selector xpath="ns:xml-source" />
						<xs:field xpath="@id" />
					</xs:unique>
				</xs:element>
				<xs:element name="default-resources" maxOccurs="1">
					<xs:complexType>
						<xs:attribute name="xml-resource-id" type="xs:string"
							use="required" />
						<xs:attribute name="xsl-resource-id" type="xs:string"
							use="required" />
					</xs:complexType>
				</xs:element>
				<xs:element name="form-constraints" minOccurs="0"
					maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="patterns" type="ns:Patterns"
								minOccurs="0" />
							<xs:element name="enums" type="ns:Enums" minOccurs="0" />
						</xs:sequence>
					</xs:complexType>
					<xs:unique name="constraints">
						<xs:selector xpath=".//*" />
						<xs:field xpath="@key" />
					</xs:unique>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
		<xs:key name="locationKeys">
			<xs:selector xpath="ns:global-resources-locations/ns:location" />
			<xs:field xpath="@id" />
		</xs:key>
		<xs:keyref name="xml-resource--global-location" refer="ns:locationKeys">
			<xs:selector xpath="ns:resources/ns:xml-resource" />
			<xs:field xpath="@global-location" />
		</xs:keyref>
		<xs:keyref name="xsl-resource--global-location" refer="ns:locationKeys">
			<xs:selector xpath="ns:resources/ns:xml-resource/ns:xsl-resource" />
			<xs:field xpath="@global-location" />
		</xs:keyref>
		<xs:keyref name="global-xsl-resource--global-location"
			refer="ns:locationKeys">
			<xs:selector xpath="ns:global-xsl-resources/ns:xsl-resource" />
			<xs:field xpath="@global-location" />
		</xs:keyref>
		<xs:key name="xmlResourcesKeys">
			<xs:selector xpath="ns:resources/ns:xml-resource" />
			<xs:field xpath="@id" />
		</xs:key>
		<xs:keyref name="default-xml-resource-id" refer="ns:xmlResourcesKeys">
			<xs:selector xpath="ns:default-resources" />
			<xs:field xpath="@xml-resource-id" />
		</xs:keyref>
	</xs:element>
	<xs:complexType name="XslResource">
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="resource-name" type="xs:string" use="required" />
		<xs:attribute name="location" type="xs:string" use="optional" />
		<xs:attribute name="global-location" type="xs:string"
			use="optional" />
	</xs:complexType>

	<xs:complexType name="XmlResource" mixed="true">
		<xs:sequence>
			<xs:element name="xsl-resource" type="ns:XslResource"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="resource-name" type="xs:string" use="required" />
		<xs:attribute name="location" type="xs:string" use="optional" />
		<xs:attribute name="group-location" type="xs:string" use="optional" />
		<xs:attribute name="global-location" type="xs:string"
			use="optional" />
	</xs:complexType>
	<xs:complexType name="Patterns">
		<xs:sequence>
			<xs:element name="pattern" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="key" type="xs:string" use="required" />
					<xs:attribute name="value" type="xs:string" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Enums">
		<xs:sequence>
			<xs:element name="enum" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="value" type="xs:string" minOccurs="0"
							maxOccurs="unbounded" />
					</xs:sequence>
					<xs:attribute name="key" type="xs:string" use="required" />
					<xs:attribute name="values" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

</xs:schema>
